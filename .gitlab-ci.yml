before_script:
  - ci-apt-get-update
  - ci-apt-get-install --no-install-recommends autoconf automake libtool pkg-config
  - ./autogen.sh

build-standalone:
  stage: build
  script:
    - ./configure
    - make

build-libde265:
  stage: build
  script:
    - add-apt-repository ppa:strukturag/libde265
    - ci-apt-get-update
    - ci-apt-get-install --no-install-recommends libde265-dev
    - ./configure
    - make

build-libde265-new:
  stage: build
  variables:
    CCACHE_COMPRESS: "true"
    CCACHE_DIR: "$CI_PROJECT_DIR/.ccache"
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .ccache
  script:
    - git clone --depth 1 -b frame-parallel https://github.com/strukturag/libde265.git
    - ( cd libde265 && ./autogen.sh )
    - ( cd libde265 && ./configure --prefix=$CI_PROJECT_DIR/libde265/dist --disable-dec265 --disable-sherlock265 --disable-hdrcopy --disable-enc265 --disable-acceleration_speed )
    - ( cd libde265 && make && make install )
    - PKG_CONFIG_PATH=$CI_PROJECT_DIR/libde265/dist/lib/pkgconfig/ ./configure
    - make

build-convert:
  stage: build
  script:
    - add-apt-repository ppa:strukturag/libde265
    - ci-apt-get-update
    - ci-apt-get-install --no-install-recommends libde265-dev libjpeg-dev libpng-dev
    - ./configure
    - make

build-emscripten:
  stage: test
  variables:
    EMSCRIPTEN_VERSION: 1.37.26
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - emscripten/
  artifacts:
    expire_in: 1 week
    paths:
      - ./libheif.js
  script:
    - mkdir -p emscripten
    - ./scripts/install-emscripten.sh $EMSCRIPTEN_VERSION emscripten
    - source ./emscripten/emsdk-portable/emsdk_env.sh && ./build-emscripten.sh
